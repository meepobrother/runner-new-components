{"version":3,"file":"weui-badge.es5.js","sources":["ts/weui-badge.ts","ts/public_api.ts","ts/weui-badge-setting/weui-badge-setting.ts","ts/weui-badge-preview/weui-badge-preview.ts","../../../../../node_modules/ng-react-component/esm5/ng:/ng-react-component/common/ng-component.ts","../../../../../node_modules/ng-react-component/esm5/ng:/ng-react-component/common/ng-each-of.ts","../../../../../node_modules/ng-react-component/esm5/ng:/ng-react-component/react.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {both,preview,entrys,WeuiBadgeProps} from './public_api';\n\nexport {WeuiBadgePreviewComponent as ɵa} from './weui-badge-preview/weui-badge-preview';\nexport {WeuiBadgeSettingComponent as ɵb} from './weui-badge-setting/weui-badge-setting';","import { WeuiBadgePreviewComponent } from './weui-badge-preview/weui-badge-preview';\nimport { WeuiBadgeSettingComponent } from './weui-badge-setting/weui-badge-setting';\n\nexport const /** @type {?} */ both = {\n    'weui-badge': {\n        setting: WeuiBadgeSettingComponent,\n        view: WeuiBadgePreviewComponent\n    }\n};\n\nexport const /** @type {?} */ preview = {\n    'weui-badge': WeuiBadgePreviewComponent\n};\n\nexport const /** @type {?} */ entrys = [\n    WeuiBadgeSettingComponent,\n    WeuiBadgePreviewComponent\n];\n\nexport { WeuiBadgeProps } from './weui-badge-preview/weui-badge-preview';\n","import {\n    Component, KeyValueDiffers,\n    ElementRef, Renderer2, HostListener\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nexport class WeuiBadgeSettingComponent extends ReactComponent<any, any> {\n/**\n * @return {?}\n */\nmouseover() {\n        this.props.focus = true;\n    }\n/**\n * @return {?}\n */\nmouseleave() {\n        this.props.focus = false;\n    }\n/**\n * @param {?} _differs\n * @param {?} _ele\n * @param {?} _render\n */\nconstructor(\n        _differs: KeyValueDiffers,\n        _ele: ElementRef,\n        _render: Renderer2\n    ) {\n        super(_differs, _ele, _render);\n    }\n/**\n * @return {?}\n */\nonPropsChange() { }\n/**\n * @return {?}\n */\nonStateChange() {\n        console.log(this.state);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-badge-setting',\n    template: `\n      <div class=\"weui-cells weui-cells_form\" *ngIf=\"!props.dot\" [class.focus]=\"props.focus\">\n          <div class=\"weui-cell\">\n              <div class=\"weui-cell__hd\">\n                  <label class=\"weui-label\">显示数字</label>\n              </div>\n              <div class=\"weui-cell__bd\">\n                  <input class=\"weui-input\" type=\"text\" placeholder=\"text\" [(ngModel)]=\"props.text\">\n              </div>\n          </div>\n      </div>\n\n      <ng-container *ngComponent=\"props.children;preview: false;\"></ng-container>\n    `,\n    styles: [`\n      :host {\n        display: block; }\n\n      .focus {\n        opacity: .9; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mouseover': [{ type: HostListener, args: ['mouseenter', ['$event'], ] },],\n'mouseleave': [{ type: HostListener, args: ['mouseleave', ['$event'], ] },],\n};\n}\n\nfunction WeuiBadgeSettingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWeuiBadgeSettingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeuiBadgeSettingComponent.ctorParameters;\n/** @type {?} */\nWeuiBadgeSettingComponent.propDecorators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component, KeyValueDiffers,\n    ElementRef, Renderer2, HostListener\n} from '@angular/core';\nimport { ReactComponent } from 'ng-react-component';\nexport interface WeuiBadgeProps {\n    text: number | string;\n    style: { [key: string]: string };\n    focus: boolean;\n    children: any[];\n    dot: boolean;\n}\nexport class WeuiBadgePreviewComponent extends ReactComponent<WeuiBadgeProps, any> {\n/**\n * @return {?}\n */\nmouseover() {\n        this.props.focus = true;\n    }\n/**\n * @return {?}\n */\nmouseleave() {\n        this.props.focus = false;\n    }\n/**\n * @param {?} _differs\n * @param {?} _ele\n * @param {?} _render\n */\nconstructor(\n        _differs: KeyValueDiffers,\n        _ele: ElementRef,\n        _render: Renderer2\n    ) {\n        super(_differs, _ele, _render);\n    }\n/**\n * @return {?}\n */\nonPropsChange() { }\n/**\n * @return {?}\n */\nonStateChange() {\n        console.log(this.state);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-badge-preview',\n    template: `\n      <span class=\"weui-badge\" [class.weui-badge_dot]=\"props.dot\" [ngStyle]=\"props.style\">{{props.dot ? '' : props.text}}</span>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mouseover': [{ type: HostListener, args: ['mouseenter', ['$event'], ] },],\n'mouseleave': [{ type: HostListener, args: ['mouseleave', ['$event'], ] },],\n};\n}\n\nfunction WeuiBadgePreviewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWeuiBadgePreviewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeuiBadgePreviewComponent.ctorParameters;\n/** @type {?} */\nWeuiBadgePreviewComponent.propDecorators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {\n    ComponentFactoryResolver, ComponentRef, Directive,\n    Injector, Input, NgModuleFactory, NgModuleRef,\n    OnChanges, OnDestroy, SimpleChanges, StaticProvider,\n    Type, ViewContainerRef, Output, OnInit, ComponentFactory\n} from '@angular/core';\n\n@Directive({ selector: '[ngComponent]' })\nexport class NgComponentDirective implements OnInit {\n    viewContainerRef: any;\n    componentRef: ComponentRef<any>;\n    moduleRef: any;\n\n    @Input() ngComponent: any;\n    @Input() ngComponentInput: any;\n    @Output() Output: any;\n\n    constructor(_viewContainerRef: ViewContainerRef) {\n        this.viewContainerRef = _viewContainerRef;\n    }\n\n    ngOnInit() {\n        // console.log(this.ngComponentInput);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.viewContainerRef.clear();\n        this.componentRef = null;\n        if (this.ngComponent) {\n            const elInjector = this.viewContainerRef.parentInjector;\n            const componentFactoryResolver: ComponentFactoryResolver = this.moduleRef ? this.moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            const componentFactory: ComponentFactory<any> =\n                componentFactoryResolver.resolveComponentFactory(this.ngComponent);\n            this.componentRef = this.viewContainerRef.createComponent(\n                componentFactory,\n                this.viewContainerRef.length,\n                elInjector,\n                this.ngComponent\n            );\n            this.componentRef.instance.props = this.ngComponentInput;\n        }\n    }\n}\n","\nimport {\n    ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input,\n    IterableChangeRecord, IterableChanges, IterableDiffer,\n    IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef,\n    TrackByFunction, ViewContainerRef, forwardRef, isDevMode\n} from '@angular/core';\nimport {\n    KeyValueDiffer, KeyValueChanges, KeyValueChangeRecord,\n    KeyValueDifferFactory, KeyValueDiffers\n} from '@angular/core';\nexport interface EachKeyValue<T> {\n    [key: string]: T;\n}\nexport class NgEachOfContext<T> {\n    constructor(\n        public $implicit: T,\n        public ngForOf: EachKeyValue<T>,\n        public key: string,\n    ) { }\n}\n\n@Directive({ selector: '[ngEach][ngEachOf]' })\nexport class NgEachOf<T> implements DoCheck, OnChanges {\n    @Input() ngEachOf: EachKeyValue<T>;\n    private _differ: KeyValueDiffer<string, T> | null = null;\n    constructor(\n        private _viewContainer: ViewContainerRef,\n        private _template: TemplateRef<NgEachOfContext<T>>,\n        private _differs: KeyValueDiffers\n    ) { }\n    @Input()\n    set ngForTemplate(value: TemplateRef<NgEachOfContext<T>>) {\n        if (value) {\n            this._template = value;\n        }\n    }\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('ngEachOf' in changes) {\n            const value = changes['ngEachOf'].currentValue;\n            if (!this._differ && value) {\n                this._differ = this._differs.find(value).create();\n            }\n        }\n    }\n    ngDoCheck(): void {\n        if (this._differ) {\n            const changes = this._differ.diff(this.ngEachOf);\n            if (changes) this._applyChanges(changes);\n        }\n    }\n\n    private _applyChanges(changes: KeyValueChanges<string, T>) {\n        const insertTuples: RecordViewTuple<T>[] = [];\n        changes.forEachItem(\n            (item: KeyValueChangeRecord<string, T>) => {\n                if (item.previousValue == null) {\n                    const view = this._viewContainer.createEmbeddedView(\n                        this._template,\n                        new NgEachOfContext<T>(item.currentValue, this.ngEachOf, item.key),\n                        parseInt(item.key, 16)\n                    );\n                    const tuple = new RecordViewTuple<T>(item, view, parseInt(item.key, 16));\n                    insertTuples.push(tuple);\n                } else if (item.currentValue == null) {\n                    this._viewContainer.remove(parseInt(item.key, 16));\n                } else {\n                    const view = this._viewContainer.get(parseInt(item.key, 16))!;\n                    this._viewContainer.move(view, parseInt(item.key, 16));\n                    const tuple = new RecordViewTuple(\n                        item.currentValue,\n                        <EmbeddedViewRef<NgEachOfContext<T>>>view,\n                        parseInt(item.key, 16)\n                    );\n                    insertTuples.push(tuple);\n                }\n            }\n        );\n    }\n}\n\nclass RecordViewTuple<T> {\n    constructor(\n        public record: any,\n        public view: EmbeddedViewRef<NgEachOfContext<T>>,\n        public index: number\n    ) { }\n}\n","\nimport {\n    EventEmitter, NgZone, Input, Output,\n    KeyValueDiffer, HostListener, HostBinding, ElementRef,\n    Renderer2\n} from '@angular/core';\nimport { OnChanges, KeyValueChanges, DoCheck, KeyValueDiffers, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\n\nfunction guid() {\n    function S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\nfunction type(val): string {\n    return typeof val;\n}\nfunction defaults(target: any, options: any): KeyValue {\n    if (target === null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport interface KeyValue {\n    [key: string]: any;\n    children: any[];\n}\nexport abstract class ReactComponent<P extends KeyValue, T extends KeyValue> implements OnChanges, DoCheck {\n    @Input() state: T;\n    get state$(): Observable<KeyValue> {\n        return this.stateChange.share();\n    }\n    @Input() props: P;\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n    /**\n     * 监听click事件\n     * @param e \n     */\n    @HostListener('click', ['$event'])\n    _onClick(e: Event) {\n        this.onClick.emit(e);\n    }\n    private _stateDiffer: KeyValueDiffer<string, any>;\n    private _propsDiffer: KeyValueDiffer<string, any>;\n    guid: string = guid();\n    @HostBinding('attr.id') _id: string;\n    constructor(\n        private _differs: KeyValueDiffers,\n        public ele: ElementRef,\n        public render: Renderer2\n    ) {\n        this.props = {\n            children: []\n        } as P;\n        this.state = {} as T;\n    }\n\n    createGuid() {\n        return guid();\n    }\n\n    setState(state: T): void {\n        this._stateDiffer = this._differs.find(this.state).create();\n        this.state = state;\n        this.ngDoCheck();\n    }\n\n    setProps(props: P): void {\n        this._propsDiffer = this._differs.find(this.props).create();\n        this.props = props;\n        this.ngDoCheck();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('props' in changes) {\n            const value = changes['props'].currentValue;\n            this._propsDiffer = this._differs.find(value).create();\n        }\n        if ('state' in changes) {\n            const value = changes['state'].currentValue;\n            this._stateDiffer = this._differs.find(value).create();\n        }\n    }\n\n    ngDoCheck(): void {\n        if (this._propsDiffer) {\n            const changes = this._propsDiffer.diff(this.props);\n            if (changes) this._propsChanges(changes);\n        }\n        if (this._stateDiffer) {\n            const changes = this._stateDiffer.diff(this.state);\n            if (changes) this._stateChanges(changes);\n        }\n    }\n\n    setClass(classObj: { [key: string]: boolean }) {\n        for (const key in classObj) {\n            if (classObj[key]) {\n                this.render.addClass(this.ele.nativeElement, key);\n            } else {\n                this.render.removeClass(this.ele.nativeElement, key);\n            }\n        }\n    }\n\n    setStyle(styleObj: { [key: string]: string }) {\n        for (const key in styleObj) {\n            this.render.setStyle(this.ele.nativeElement, key, styleObj[key]);\n        }\n    }\n\n    removeStyle(styles: any) {\n        if (type(styles) == 'array' && type(styles) !== 'undefined') {\n            styles.map(key => {\n                this.render.removeStyle(this.ele.nativeElement, key);\n            });\n        } else {\n            this.render.removeStyle(this.ele.nativeElement, styles);\n        }\n    }\n\n    addStyle(name: string, value: string) {\n        this.render.setStyle(this.ele.nativeElement, name, value);\n    }\n\n    addClass(name: string) {\n        this.render.addClass(this.ele.nativeElement, name);\n    }\n\n    setAttribute(classObj: { [key: string]: any }) {\n        for (const key in classObj) {\n            if (type(classObj[key]) === 'boolean') {\n                if (classObj[key]) {\n                    this.render.setAttribute(this.ele.nativeElement, key, 'true');\n                } else {\n                    this.render.removeAttribute(this.ele.nativeElement, key);\n                }\n            } else {\n                this.render.setAttribute(this.ele.nativeElement, key, classObj[key]);\n            }\n        }\n    }\n\n    removeClass(name: string) {\n        this.render.removeClass(this.ele.nativeElement, name);\n    }\n\n    private _stateChanges(changes: KeyValueChanges<string, T>) {\n        this.onStateChange(changes);\n        this.stateChange.emit(this.state);\n    }\n    private _propsChanges(changes) {\n        this.onPropsChange(changes);\n        this.propsChange.emit(this.props);\n    }\n    abstract onPropsChange(changes: KeyValueChanges<string, P>): void;\n    abstract onStateChange(changes: KeyValueChanges<string, T>): void;\n}\n"],"names":[],"mappings":"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"}
